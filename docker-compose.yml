version: "3.9"

services:
  mysql:
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=flowo_db
      - MYSQL_USER=myuser
      - MYSQL_PASSWORD=mypassword
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 15s
    volumes:
      - mysql_data:/var/lib/mysql
      - ./flowo-backend/init_script:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - app-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-network

  backend:
    build:
      context: ./flowo-backend
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SERVER_PORT=8081
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_USER=root
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=flowo_db
      - REDIS_ADDR=redis:6379    
      - REDIS_PASSWORD=  
      - RETRY_ATTEMPTS=10
      - RETRY_DELAY=10
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network
    restart: on-failure:5

  frontend:
    build:
      context: ./flowo-frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      - VITE_API_BASE_URL=http://localhost:8081/api/v1
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  agno:
    build:
      context: ./flowo-agno-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - SERVICE_PORT=8082
      - BACKEND_API_URL=http://backend:8081/api/v1
      - BACKEND_API_EXTERNAL_URL=http://localhost:8081/api/v1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - DEBUG_MODE=false
      - AGENT_PROVIDER=${AGENT_PROVIDER:-openai}
      - AGENT_MODEL=${AGENT_MODEL:-gpt-4o-mini}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
    depends_on:
      - backend
      - redis
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - agno_data:/app/tmp

volumes:
  mysql_data:
  agno_data: 

networks:
  app-network:
    driver: bridge